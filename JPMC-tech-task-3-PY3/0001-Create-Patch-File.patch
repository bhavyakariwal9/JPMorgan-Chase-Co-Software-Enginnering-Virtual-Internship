From b74c287592dc123a440a75c32577c323c63ae85a Mon Sep 17 00:00:00 2001
From: Bhavya Kariwala <bhavyaakriwal9@gmail.com>
Date: Fri, 28 Aug 2020 15:33:15 +0530
Subject: [PATCH] Create Patch File

---
 src/DataManipulator.ts | 33 +++++++++++++++++++++++----------
 src/Graph.tsx          | 22 ++++++++++++++--------
 2 files changed, 37 insertions(+), 18 deletions(-)

diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index f6b15ff..33ef783 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,20 +1,33 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
+  price_abc: number,
+  price_def: number,
+  ratio:number,
   timestamp: Date,
+  upper_bound:number,
+  lower_bound:number,
+  trigger_alert:number | undefined,
 }
 
 
 export class DataManipulator {
-  static generateRow(serverResponds: ServerRespond[]): Row[] {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
-      };
-    })
+  static generateRow(serverResponds: ServerRespond[]): Row {
+    const priceABC=(serverResponds[0].top_ask.price+serverResponds[0].top_bid.price)/2
+    const priceDEF=(serverResponds[1].top_ask.price+serverResponds[1].top_bid.price)/2
+    const ratio=priceABC/priceDEF
+    const upperBound=1 + 0.07
+    const lowerBound=1 - 0.07
+    return{
+      price_abc:priceABC,
+      price_def:priceDEF,
+      ratio,
+      timestamp:serverResponds[0].timestamp>serverResponds[1].timestamp?serverResponds[0].timestamp:serverResponds[1].timestamp,
+      upper_bound:upperBound,
+      lower_bound:lowerBound,
+      trigger_alert:(ratio > upperBound || ratio < lowerBound) ? ratio : undefined,
+    };
+    
   }
+  
 }
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 58fb997..31e2451 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -23,10 +23,13 @@ class Graph extends Component<IProps, {}> {
     const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
 
     const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
       timestamp: 'date',
+      price_abc:'float',
+      price_def:'float',
+      ratio:'float',
+      upper_bound:'float',
+      lower_bound:'float',
+      trigger_alert:'float'
     };
 
     if (window.perspective && window.perspective.worker()) {
@@ -40,19 +43,22 @@ class Graph extends Component<IProps, {}> {
       elem.setAttribute('row-pivots', '["timestamp"]');
       elem.setAttribute('columns', '["top_ask_price"]');
       elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
+        price_abc: 'avg',
+        price_def: 'avg',
+        ratio:'avg',
         timestamp: 'distinct count',
+        upper_bound: 'avg',
+        lower_bound:'avg',
+        trigger_alert:'avg',
       }));
     }
   }
 
   componentDidUpdate() {
     if (this.table) {
-      this.table.update(
+      this.table.update([
         DataManipulator.generateRow(this.props.data),
-      );
+      ]);
     }
   }
 }
-- 
2.28.0.windows.1

