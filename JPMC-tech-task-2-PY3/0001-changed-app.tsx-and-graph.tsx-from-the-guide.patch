From db09c5c7a4ffecf73adff711e5402d700859d5d4 Mon Sep 17 00:00:00 2001
From: bhavyakariwal9 <bhavyakariwal9@gmail.com>
Date: Fri, 28 Aug 2020 14:43:46 +0530
Subject: [PATCH] changed app.tsx and graph.tsx from the guide

---
 src/App.tsx   | 26 ++++++++++++++++++++------
 src/Graph.tsx |  8 +++++++-
 2 files changed, 27 insertions(+), 7 deletions(-)

diff --git a/src/App.tsx b/src/App.tsx
index 0728518..a386a34 100755
--- a/src/App.tsx
+++ b/src/App.tsx
@@ -8,6 +8,7 @@ import './App.css';
  */
 interface IState {
   data: ServerRespond[],
+  showGraph: boolean,
 }
 
 /**
@@ -22,6 +23,7 @@ class App extends Component<{}, IState> {
       // data saves the server responds.
       // We use this state to parse data down to the child element (Graph) as element property
       data: [],
+      showGraph:false,
     };
   }
 
@@ -29,18 +31,30 @@ class App extends Component<{}, IState> {
    * Render Graph react component with state.data parse as property data
    */
   renderGraph() {
-    return (<Graph data={this.state.data}/>)
+    if(this.state.showGraph){
+      return (<Graph data={this.state.data}/>)
+    }
   }
 
   /**
    * Get new data from server and update the state with the new data
    */
   getDataFromServer() {
-    DataStreamer.getData((serverResponds: ServerRespond[]) => {
-      // Update the state by creating a new array of data that consists of
-      // Previous data in the state and the new data from server
-      this.setState({ data: [...this.state.data, ...serverResponds] });
-    });
+    let x=0
+    const interval=setInterval(()=>{
+      DataStreamer.getData((serverResponds: ServerRespond[]) => {
+        // Update the state by creating a new array of data that consists of
+        // Previous data in the state and the new data from server
+        this.setState({
+          data: serverResponds,
+          showGraph:true,
+        });
+      });
+      x++
+      if(x>100){
+        clearInterval(interval)
+      }
+    },100);  
   }
 
   /**
diff --git a/src/Graph.tsx b/src/Graph.tsx
index ec1430e..0b33cb5 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -14,7 +14,7 @@ interface IProps {
  * Perspective library adds load to HTMLElement prototype.
  * This interface acts as a wrapper for Typescript compiler.
  */
-interface PerspectiveViewerElement {
+interface PerspectiveViewerElement extends HTMLElement{
   load: (table: Table) => void,
 }
 
@@ -49,6 +49,12 @@ class Graph extends Component<IProps, {}> {
 
       // Add more Perspective configurations here.
       elem.load(this.table);
+      elem.setAttribute('view','y_line')
+      elem.setAttribute('column-pivots','["stock"]')
+      elem.setAttribute('row-pivots','["timestamp"]')
+      elem.setAttribute('colums','["top_ask_price"]')
+      elem.setAttribute('aggregates',
+      '{"stock":"distinct count","top_ask_price":"avg","top_bid_price":"avg","timestamp":"distinct count"}')
     }
   }
 
-- 
2.28.0.windows.1

